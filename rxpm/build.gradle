buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'consumer-proguard-rules.txt'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

dependencies {
    // Kotlin
    compile rootProject.ext.kotlinStdlib

    // For default implementations
    provided rootProject.ext.supportAppCompat
    provided rootProject.ext.supportDesign
    provided rootProject.ext.conductor
    provided rootProject.ext.googleMaps

    // Rx
    compile rootProject.ext.rxJava2
    compile rootProject.ext.rxRelay2
    compile rootProject.ext.rxAndroid2

    // RxBindings
    compile rootProject.ext.rxBindingKotlin
    compile(rootProject.ext.rxBindingSupportV4Kotlin) {
        exclude module: 'support-core-ui'
    }

    // Persistent PM
    compile rootProject.ext.outlast

    // For tests
    testCompile rootProject.junitKotlin
    testCompile rootProject.mockitoKotlin
}

ext {
    libraryVersion = '0.1'
    publishedGroupId = 'me.dmdev.rxpm'
}

group = publishedGroupId
version = libraryVersion

// Configuration of the library uploading to the Bintray
// Note: Call 'bintrayUpload' task (it will execute 'install' task first)
apply from: 'androidmaven.gradle'
apply from: 'bintray.gradle'

// Tasks for sources and javadocs jars
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

//Disable Javadoc tasks
tasks.withType(Javadoc).all { enabled = false }

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
